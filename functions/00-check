#! /bin/bash
#set -eu

dir="$(dirname "$0")"
deps="${dir}/packages/deps.list"

midbranch="\0342\0224\0234\0342\0224\0200\0342\0224\0200"
endbranch="\0342\0224\0224\0342\0224\0200\0342\0224\0200"

heirarchy="Main
 ${midbranch} Base
 ${midbranch} Miscellaneous
 ${midbranch} Desktop environment
 ${midbranch} Network tools
 ${midbranch} Applications
 ${midbranch} Themes
 ${endbranch} Personalization"

function check_fail {
  EXITSTATUS=${1:-}
  if [[ $EXITSTATUS -gt 0 ]]; then
    sleep 3s && main
  fi
}

function check_installed {
  for package in "${@}"; do
    # metacount=$(dp -s ${package} | grep -c "(.*${package}.*)" || true)
    # installcount=$(pacman -Qs ${package} | grep -c "^local.*(.*${package}.*)$" || true)

    # Check if package is installed.
    if dpkg -s ${package} > /dev/null 2>&1; then
      show_listitem "${package} package already installed. Skipping."

    # pacman -Qi won't work with meta packages, so check if all meta package
    # members are installed instead.
    # elif [[ (${installcount} -eq ${metacount}) \
            # && ! (${installcount} -eq 0) ]]; then
      # show_listitem "${package} meta-package already installed. Skipping."

    # Runs if package is not installed or all members of meta-package are not
    # installed.
    else
      show_listitem "Installing ${package}."
      sudo apt-get -y install ${package}
    fi
  done
}

function install_dependencies {
  show_header "Checking dependencies."
  for package in $(cat $deps); do
    if ! dpkg -s ${package} > /dev/null 2>&1; then
      show_info "${package} is needed for this script."
      sudo apt-get install ${package}
      check_fail
      show_success "${package} now installed."
    else
      show_success "${package} is already installed."
    fi
  done
}

function check_network {
  show_header "Checking network connection."
  
  if wget -q --tries=10 --timeout=20 --spider https://google.com >/dev/null; then
    show_success "Network is working."
  else
    show_error "Cannot start network connextion."
    exit 1
  fi
}
